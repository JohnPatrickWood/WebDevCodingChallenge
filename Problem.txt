Full Stack Web Developer Coding Challenge
Sitemap Examiner
In this exercise, you will build and document a system that is capable of serving and displaying search data
from one of our product site maps in a browser. You may do this in any combination of languages (although
NodeJS, Python, Java, JavaScript, Perl, or Ruby are preferred). You may use any reference and any
open-source software you can find to help you build this system, so long as you document your use. However,
you should not actively collaborate with others.
Part 1: RESTful API Service
Create a RESTful API sercice that returns the result of a search.
We would like you to write a RESTful service that allows for searching the following XML document,
https://www.christianbook.com/sitemap4.xml, for a sku and returning the title, author and price information
associated with that sku from the corresponding web page. The sku for a product is the last component in the
URI path for that product's URL
Part 2: Create a simple web interface
This web interface should allow a user to enter a product sku and return the result/s from the service that you
created in Part 1.
What to Submit
Submit a link to your GitHub project that contains shell scripts to build and run your system, documentation
for your system, and the source code for the system itself.
build.sh - A script that can be invoked to build your system. This script may exit without doing anything if
your system does not need to be compiled. You may invoke another tool such as Maven, Ant, etc. with this
script. You may download and install any libraries or other programs you feel are necessary to help you
build your system.
run.sh - A script that takes a single command-line parameter which is the name of the file to serve.
Ultimately, it should start the server you have built.
README - A Markdown or plain text file that answers the following questions:
How does your system work? (if not addressed in comments in source)
How could you scale your system to search across all sitemap files?
How will your system perform with 100 users? 10,000 users? 1,000,000 users?
What documentation, websites, papers, etc did you consult in doing this assignment?
How long did you spend on this exercise? If you had unlimited more time to spend on this, how would you
spend it and how would you prioritize each item?
If you were to critique your code, what would you have to say about it?
How can you change your system be updated to support simple keyword searches?